plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id 'maven-publish'
}

def mcVersionInt = Integer.parseInt(project.mixinName);
version = project.modVersion + '-' + project.minecraftVersion
group = project.mavenGroup

base {
    archivesName = project.archiveBaseName
}

repositories {
    maven { url = "https://maven.fabricmc.net/" }
    maven { url = "https://jitpack.io" }
}

loom {
    if (mcVersionInt > 117) {
        splitEnvironmentSourceSets()

        mods {
            "leaf-decay" {
                sourceSet sourceSets.main
                sourceSet sourceSets.client
            }
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraftVersion}"
    mappings "net.fabricmc:yarn:${project.yarnMappingVersion}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.fabricVersion}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabricApiVersion}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand  "version": project.version,
                "mixinPath": "leafdecay.mixins.${project.mixinName}.json"
    }

    if (mcVersionInt < 119) {
        from 'src/main/java/draylar/leafdecay/scheduler' include '.java'
        into 'src/main/java/draylar/leafdecay/scheduler' rename {
            String fileName -> fileName.replace('PreNineteenLogBreakHandler', 'LegacyLogBreakHandler')
        }
        filter {
            String line -> line.replaceAll('PreNineteen', 'Legacy')
        }
    } else if (mcVersionInt == 119) {
        from 'src/main/java/draylar/leafdecay/scheduler' include '.java'
        into 'src/main/java/draylar/leafdecay/scheduler' rename {
            String fileName -> fileName.replace('NineteenLogBreakHandler', 'LegacyLogBreakHandler')
        }
        filter {
            String line -> line.replaceAll('Nineteen', 'LegacyHam')
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

sourceSets {
    main {
        java {
            if (mcVersionInt < 119) {
                exclude {
                    "draylar/leafdecay/mixin/LeafDecayMixin"
                    "draylar/leafdecay/mixin/LogBreakMixin"
                    "draylar/leafdecay/scheduler/LogBreakHandler"
                }
            } else if (mcVersionInt == 119) {
                exclude {
                    "draylar/leafdecay/mixin/LegacyLeafDecayMixin"
                    "draylar/leafdecay/mixin/LogBreakMixin"
                    "draylar/leafdecay/scheduler/LegacyLogBreakHandler"
                }
            } else {
                exclude {
                    "draylar/leafdecay/mixin/LegacyLeafDecayMixin"
                    "draylar/leafdecay/mixin/LegacyLogBreakMixin"
                    "draylar/leafdecay/scheduler/LegacyLogBreakHandler"
                }
            }
        }
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archiveBaseName
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}